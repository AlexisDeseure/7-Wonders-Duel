@startuml
!define MyBackgroundColor #lightblue
!define MyBorderColor #005f87

skinparam class {
  BackgroundColor MyBackgroundColor
  BorderColor MyBorderColor
}
skinparam classAttributeIconSize 0


class MyException {
    -info: string
    +getInfo(): string
}

class Board {
  -age : int
  +advancedAge()
  +updateMarket()
}

class City{
 -military_position : int
  -treasury : int
  -number_of_shields : int
  -player_turn : bool
  +play()
  +constructBuilding(Building* building) : Building&
  +constructWonder(Wonder* wonder) : Wonder&
  +discardCard(Card* card)
  +checkMilitaryVictory() : Bool
  +checkScientificVictory() : Bool
  +buy(card& c) : Bool
}

class ScientificSymbol{
  -symbol_type: SymbolType
  -count: int 
  
  +add()
}

class Card{
  -name : string
  -ressources : Ressource**
  -taille_ressources : int
  +get_price_ressources const () : Ressources**
} 



class Building{
  -age : int
  -visible : bool
  -type : couleur
  -chain_cost : int
  +build()
  -discardIt()
  
  
}

class Wonder{
  -activated : bool
  
  +getStatus() : bool
  +activate() : void
}

class ProgressToken{
  -on_the_board : bool
  +onTheBoard() : bool
  +statusSwitch() : void
}

class ConflictPawn{
  -current_position
  
  +move()
}


class MarketDeck{
  -age : int
  -first_buildings : DeckElement**
  -nb_first_buildings : int
  +constructNewAgeMarket()
  +advanceAge()
  +class iterator()
}
class DeckElement{
  -right_son : DeckElement*
  -left_son : DeckElement*
  -right_father : DeckElement*
  -left_father : DeckElement*
  -building : Building&
  -visible : bool
  +getRightSon() : DeckElement*
  +getLeftSon() : DeckElement*
  +getRightFather() : DeckElement*
  +getLeftFather() : DeckElement*
  +getBuilding() : Building&
  +isVisible() : bool
  +setVisible() : void
  +operator++(int) : DeckElement*
  +operator++() : DeckElement*
}

class Ressource{
  -type : RessourceType
  -amount : int
  -price : int
  
  +addMaterials() : void
  +getPrice() : int
  +getAmount() : int
  +updatePrice() : void
}
class Effect{
    -effect_name
}

/'
class InstantReplaying{
  +apply()
}

class AdversaryPaysMoneyToBank{
  +apply()
}
class AddVictoryPoint{
  +apply()
}

class MoveConflictPawn{
  +apply()
}
class AddRessource{
  +apply()
}

class DiscardAdversaryBrownCard{
  +apply()
}

class AddRessourceChoice{
  +apply()
}
class BuildOneDiscardedBuilding{
  +apply()
}
class ChooseOneProgressTokenWithinThreeDiscarded{
  +apply()
}

class EarnFourMoneyPerBuildingChaining{
  +apply()
}

class NewWondersHaveInstantReplaying{
  +apply()
}

class MoveConflictPawnOneMorePerNewRed{
  +apply()
}

class EarnThreeVictoryPointsPerProgressTokenAtEndGame{
  +apply()
}

class TakeScientificSymbol{
  +apply()
}

class TakeAdversaryTradeMoney{
  +apply()
}

class WonderCostReducedByX{
  +apply()
}



class EarnXMoneyPerMostAtConstruct{
  +apply()
}

class EarnXMoneyPerWonderAtConstruct{
  +apply()
}

class EarnXVictoryPointPerMostWonderAtEndGame{
  +apply()
}

class EarnXVictoryPointPerGoldAndBrownMostAtEndGame{
  +apply()
}

class EarnXVictoryPointPerThingMostAtEndGame{
  -thing
  +apply()
}

class ChangeMarketRule{
  +apply()
}'/


enum SymbolType {
    COMPASS, QUILL, WHEEL, TABLET, SCALE, BOWL, GLOBE
}

enum ResourceType {
    WOOD, STONE, CLAY, PAPER, GLASS
}

Board *-- "2" City
Board o-- "5" ProgressToken 
Board *-- "1" MarketDeck
Board *-- "1" ConflictPawn

MarketDeck "1" o-- "*" DeckElement

DeckElement o-- "1" Building
/'Effect <|--  AddRessourceChoice
Effect <|--  ChangeMarketRule
Effect <|--  EarnXVictoryPointPerThingMostAtEndGame
Effect <|--  EarnXVictoryPointPerGoldAndBrownMostAtEndGame
Effect <|--  EarnXVictoryPointPerMostWonderAtEndGame
Effect <|--  EarnXMoneyPerWonderAtConstruct
Effect <|--  EarnXMoneyPerMostAtConstruct
Effect <|--  WonderCostReducedByX
Effect <|--  TakeAdversaryTradeMoney
Effect <|--  TakeScientificSymbol
Effect <|--  EarnThreeVictoryPointsPerProgressTokenAtEndGame
Effect <|--  MoveConflictPawnOneMorePerNewRed
Effect <|--  NewWondersHaveInstantReplaying
Effect <|--  EarnFourMoneyPerBuildingChaining
Effect <|--  ChooseOneProgressTokenWithinThreeDiscarded
Effect <|--  BuildOneDiscardedBuilding
Effect <|--  DiscardAdversaryBrownCard
Effect <|--  AddRessource
Effect <|--  MoveConflictPawn
Effect <|--  AddVictoryPoint
Effect <|--  AdversaryPaysMoneyToBank
Effect <|--  InstantReplaying'/
DeckElement "0..1" --o "0..1" DeckElement : fils droit
DeckElement "0..1" --o "0..1" DeckElement : fils gauche
DeckElement "0..1" --o "0..1" DeckElement : père droit
DeckElement "0..1" --o "0..1" DeckElement : père gauche

Effect <|--  RessourceEffect
Effect <|--  CoinEffect
Effect <|--  VictoryPointEffect
Effect <|--  ScientificSymbolEffect
Effect <|--  ShieldEffect
Effect <|--  ChangeRessourceCostEffect

Card "*" --- "*" Effect
Card <|-- Building
Card <|-- Wonder
Card <|-- ProgressToken

City o-- "*" Building
City o-- "*" Wonder
City o-- "*" ProgressToken
City *-- "*" ScientificSymbol
City *-- "*" Ressource



@enduml
